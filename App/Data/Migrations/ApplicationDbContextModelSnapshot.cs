// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Kaya Kulas",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quidem quis soluta quod ea non eos omnis. Consequatur voluptates voluptas a quam sit sequi tempore sint soluta. Iusto aliquam voluptatibus sint explicabo. Voluptatem aut quis magnam eum qui voluptate sunt.",
                            GenreId = 5,
                            ISBN = "0f1245ed-82a8-1ac0-e85c-e0219c0a48c0",
                            Image = "https://drive.google.com/thumbnail?id=1zycl7EiCECK541ialA9UCrs9HdfddUQb&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 400,
                            Publisher = "Fritsch LLC",
                            Title = "Distinctio doloremque amet.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 2,
                            Author = "Claudie Davis",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Qui nobis est nam. Quas ducimus reprehenderit suscipit quo harum sed sed. Qui architecto aut est beatae est ut sequi nemo. Sed illum maiores qui delectus blanditiis voluptatibus pariatur voluptas accusamus. Et ea animi temporibus nesciunt ipsa.",
                            GenreId = 4,
                            ISBN = "903bffbe-1f9a-a718-94b9-13d8768fe9fe",
                            Image = "https://drive.google.com/thumbnail?id=1C4sRKzQrFUDNQ1X12WVeKbX0knOoC6tA&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 112,
                            Publisher = "Hudson and Sons",
                            Title = "Magnam quas aliquam.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 3,
                            Author = "Elenora Pollich",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ducimus aut eos. Porro distinctio corporis quas. Consequatur quisquam inventore. Accusantium cumque alias architecto. Earum quas at corporis distinctio ut accusamus. Perferendis qui laboriosam consequuntur dolor voluptatibus perspiciatis qui esse natus.",
                            GenreId = 5,
                            ISBN = "dbcccf0f-a71e-280b-7da0-fbdf7386cf24",
                            Image = "https://drive.google.com/thumbnail?id=12xFmb08WRoRr5omVtZ38Obo1imbutVlh&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = false,
                            Pages = 325,
                            Publisher = "Sawayn, Kuhlman and Bergstrom",
                            Title = "Culpa aut maxime.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            Author = "Dameon Brown",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Non ipsam quia ea est voluptatem. Tenetur nihil similique. Ad perspiciatis et et et suscipit. Suscipit repudiandae omnis quaerat fugit. Rerum qui non rerum aliquam omnis placeat odit. Totam odit sequi autem sit ipsum atque sed molestiae aut.",
                            GenreId = 1,
                            ISBN = "774f5c2d-4e48-95ab-9b33-1043c63c4b2e",
                            Image = "https://drive.google.com/thumbnail?id=1bOcpnwGFqsWJVLKxwXC4pdQgo5M1wzDi&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 407,
                            Publisher = "Klocko, Lakin and Block",
                            Title = "Possimus tempora molestiae.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            Author = "Elizabeth Pfannerstill",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dignissimos minima dignissimos. Labore modi ad doloremque aut dolorem voluptatibus eum consequuntur deleniti. Rem maiores eum ut sint incidunt fugiat illo. Suscipit asperiores rerum voluptatem occaecati maiores temporibus sed mollitia.",
                            GenreId = 5,
                            ISBN = "a29c048d-f969-2315-aa1e-d0ed29d64c89",
                            Image = "https://drive.google.com/thumbnail?id=1Eu7yiiaAMfb0ktMOKhJZN6htKhF-TPDc&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = false,
                            Pages = 360,
                            Publisher = "Jaskolski, Strosin and Rodriguez",
                            Title = "Vel officia nihil.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 6,
                            Author = "Brooke Dietrich",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enim ab iste eaque fuga. Itaque consectetur deleniti omnis sequi numquam. Est unde deserunt excepturi. Asperiores est reiciendis voluptatem quo nemo. Est accusantium id rerum dignissimos reprehenderit vitae quibusdam. Exercitationem ea dolorem quod quis et qui.",
                            GenreId = 4,
                            ISBN = "af9523db-0324-7486-b78d-fa4784dd6618",
                            Image = "https://drive.google.com/thumbnail?id=1Hk2fvOg7hpmRwKWc-QTl82NGerqKib71&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = false,
                            Pages = 381,
                            Publisher = "Stoltenberg Inc",
                            Title = "Aut et hic.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 7,
                            Author = "Delphine Goldner",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quibusdam hic laudantium qui corporis. Consequuntur non rerum eaque fugiat aut ducimus. Quo ea qui inventore. Quo id sint repellat modi debitis dolor expedita eveniet. Nisi minus exercitationem. Praesentium nam et quisquam eligendi et modi iste iusto.",
                            GenreId = 5,
                            ISBN = "9cd38d83-855b-5c0e-c1bc-09c05fa4df26",
                            Image = "https://drive.google.com/thumbnail?id=1cozBSsETbbn8YWA27-cyfpxAgOKX-FwJ&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 232,
                            Publisher = "Reilly, Morissette and Rolfson",
                            Title = "Ducimus eveniet fugit.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 8,
                            Author = "Theron Nienow",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Labore adipisci qui est porro praesentium. Accusantium quis dolor adipisci dolor sunt qui laudantium aut quis. Sit id maiores neque doloremque distinctio. Eos ratione sit ipsam optio omnis natus qui omnis. Fuga porro iste.",
                            GenreId = 5,
                            ISBN = "4d27ffdd-7a58-7032-23e3-d515fdea249a",
                            Image = "https://drive.google.com/thumbnail?id=1X_DcLIDCuXHtlh2LDJrS07h8lNcK1vXl&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 201,
                            Publisher = "Paucek and Sons",
                            Title = "Molestias et voluptatem.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 9,
                            Author = "Gail Schumm",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Illum praesentium doloribus quia nulla sed. Corporis sapiente magnam occaecati quibusdam ut pariatur iusto. Nobis ipsa neque voluptate quasi vero nihil. Eligendi et omnis qui nisi. Voluptates molestiae nulla.",
                            GenreId = 1,
                            ISBN = "34284c67-39e0-3efd-104f-fb43c7452045",
                            Image = "https://drive.google.com/thumbnail?id=1UMX2PhE5C46EQuRL8UkbdUqIKGuBNbJ5&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = false,
                            Pages = 298,
                            Publisher = "Feil, Weimann and Ziemann",
                            Title = "Quia officiis et.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 10,
                            Author = "Raegan Watsica",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Accusamus est et quae quia quasi laboriosam placeat. Sint consequatur blanditiis eaque repellendus cumque dolorum voluptatem quos. Dolore quisquam cupiditate minus animi suscipit pariatur. Reprehenderit tempora pariatur quo omnis et minus. Aperiam omnis vel laboriosam atque. Rerum maxime quia nemo officia nostrum ut voluptatem molestias.",
                            GenreId = 3,
                            ISBN = "a24973cc-16c6-7495-20e6-1b7e99126b27",
                            Image = "https://drive.google.com/thumbnail?id=1kSEao7g56ZMPYkBxqCQi70rpfxSqGvMK&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 420,
                            Publisher = "Wuckert LLC",
                            Title = "Illum maxime quis.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 11,
                            Author = "Zula Gusikowski",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Eius impedit est temporibus veritatis. Perspiciatis nobis sit sit molestiae deserunt dolor. Quae aut atque qui quas. Voluptatem et molestiae officia harum beatae. Suscipit error expedita quod dignissimos alias ut aut animi. Consectetur mollitia consequatur ullam rerum doloribus sint nemo.",
                            GenreId = 2,
                            ISBN = "0ca28cf8-fde0-be1d-8a93-204b1666790c",
                            Image = "https://drive.google.com/thumbnail?id=1dwug9Rd51uRSIR61N0de32UGuZ1Ns3WH&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = true,
                            Pages = 296,
                            Publisher = "Murazik - Miller",
                            Title = "Qui tempora voluptatem.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 12,
                            Author = "Trudie McClure",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Accusantium culpa dicta sapiente quo neque distinctio eum. Non natus quis rem ipsam quia sint expedita. Quo velit aperiam enim mollitia quia atque aut nemo ab.",
                            GenreId = 4,
                            ISBN = "7a1dc91d-cca6-e9ab-0729-0985eb435653",
                            Image = "https://drive.google.com/thumbnail?id=1UCje5bgDDxlWMWdYSK8tRgwMp-LkYM27&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = false,
                            Pages = 347,
                            Publisher = "Barton Group",
                            Title = "Consequatur saepe et.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 13,
                            Author = "Geo Mante",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Consectetur provident cupiditate omnis. Ipsa tempore recusandae. Vel ex odit repellat temporibus numquam sit. Nesciunt animi numquam rerum et quisquam ut et quo. Dolor explicabo numquam quod aut maiores voluptatum aspernatur. Magni repellendus error odio est.",
                            GenreId = 5,
                            ISBN = "f82e27c8-f321-2d15-d0b3-eb23c115a3d4",
                            Image = "https://drive.google.com/thumbnail?id=17pwzIwvq6pyTJyqQ9ooT7dRXMwIHVNeU&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 151,
                            Publisher = "Kerluke - Wiegand",
                            Title = "Fugit quidem officiis.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 14,
                            Author = "Augusta Hamill",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Et aliquam nobis iste quae autem. Alias et quo. Pariatur esse omnis. Non consequatur eveniet quo deleniti neque sed. Numquam delectus beatae illo ex eaque provident.",
                            GenreId = 1,
                            ISBN = "18f83a54-327b-7f21-1526-b7498ee09fdf",
                            Image = "https://drive.google.com/thumbnail?id=1VGdbU9YQSgzTyesLYdt6xgANcWlOzVlX&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = false,
                            Pages = 450,
                            Publisher = "Marks LLC",
                            Title = "Non esse aliquam.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 15,
                            Author = "Jacques Mitchell",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Velit eos atque quia cupiditate magnam fuga. Nihil sunt quis vero veritatis asperiores. Quisquam recusandae et aut accusamus doloremque. Quisquam officiis vel.",
                            GenreId = 5,
                            ISBN = "c28ee1a4-4a83-fe23-eb55-42912f686535",
                            Image = "https://drive.google.com/thumbnail?id=1-wmBdCw9y0cuT_jaYQVd8zUtQ5Y6WydG&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = true,
                            Pages = 497,
                            Publisher = "Nienow Inc",
                            Title = "Voluptas qui earum.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 16,
                            Author = "Calista Smith",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Doloribus culpa est non reiciendis ut maxime molestiae. Ullam fugiat voluptatem exercitationem. Magnam quis delectus enim laborum sint odit. Quo voluptatem dolores est voluptatibus. Quibusdam consequatur ex ipsa impedit cumque enim tempore eius.",
                            GenreId = 3,
                            ISBN = "732e79f7-be8f-cd41-6f42-6f03e52357b0",
                            Image = "https://drive.google.com/thumbnail?id=17LCGXsaF8chECGxR5IXHkj5qc7UrWIqw&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = false,
                            Pages = 225,
                            Publisher = "Goodwin - Thiel",
                            Title = "Consequatur ut quisquam.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 17,
                            Author = "Loy Rempel",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dolorem voluptatem vel voluptate soluta fuga dolore. Magnam asperiores dolores magnam. Et sit nesciunt.",
                            GenreId = 4,
                            ISBN = "20fedc9f-21f7-8fe5-748c-ce959c8db161",
                            Image = "https://drive.google.com/thumbnail?id=1V5-GfhMxAUE5QhKYGDtE1XlAjl3sRZFN&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 282,
                            Publisher = "Auer Group",
                            Title = "Recusandae totam iusto.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 18,
                            Author = "Parker Adams",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ut quod consequatur in et quidem et amet et. Quis dignissimos culpa quis numquam maxime voluptatibus veniam. Quisquam laudantium et.",
                            GenreId = 2,
                            ISBN = "afa2c9a1-65a5-b8d8-03f7-5fce737ca0d5",
                            Image = "https://drive.google.com/thumbnail?id=129hAaWbWcEXubYXVEy2-a4Gbs0ulv9La&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = true,
                            Pages = 177,
                            Publisher = "Erdman, Leuschke and Runolfsdottir",
                            Title = "Repudiandae illum ab.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 19,
                            Author = "Jannie Howell",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ipsa voluptates hic ut vitae earum sunt ratione facilis. Iure cupiditate esse officiis reprehenderit id omnis perferendis. Occaecati deleniti dolor similique. Modi nemo voluptates illum aut quibusdam. Aut voluptatibus hic similique quo quia nemo voluptatem recusandae. Nihil rem eum delectus.",
                            GenreId = 5,
                            ISBN = "ef757aba-eaeb-40a4-d506-3756895c4d33",
                            Image = "https://drive.google.com/thumbnail?id=1iS1vCXQNst3Cm0hkq0m9m53HlFXB2e_b&sz=w1000",
                            IsBestSeller = false,
                            IsFeatured = false,
                            Pages = 409,
                            Publisher = "Dooley, Kohler and Erdman",
                            Title = "Accusantium quis inventore.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 20,
                            Author = "Shanon Yost",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Optio tempore sint placeat debitis ab. Accusantium libero praesentium et. Fuga quia animi deserunt ipsam labore quidem tenetur et. In suscipit reprehenderit omnis dolor sequi velit praesentium qui impedit.",
                            GenreId = 2,
                            ISBN = "55745c4b-0a8c-6943-f1b5-05687073b2c0",
                            Image = "https://drive.google.com/thumbnail?id=1EsQ7X9KyU57dg3N3AjHn_xtUtauiElDF&sz=w1000",
                            IsBestSeller = true,
                            IsFeatured = false,
                            Pages = 311,
                            Publisher = "Runolfsdottir, Marvin and White",
                            Title = "Eum voluptate id.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        });
                });

            modelBuilder.Entity("App.Models.BookTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckedInById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CheckedOutById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DueTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CheckedInById");

                    b.HasIndex("CheckedOutById");

                    b.HasIndex("UserId");

                    b.ToTable("BookTransactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 10,
                            CheckOutTime = new DateTime(2024, 7, 23, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(1550),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 7, 28, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(2300),
                            UserId = "4"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 15,
                            CheckOutTime = new DateTime(2024, 7, 23, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(1550),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 7, 28, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(2710),
                            UserId = "1"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 20,
                            CheckOutTime = new DateTime(2024, 7, 23, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(1550),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 7, 28, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(2730),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 15,
                            CheckOutTime = new DateTime(2024, 7, 23, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(1550),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 7, 28, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(2730),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 10,
                            CheckOutTime = new DateTime(2024, 7, 23, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(1550),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 7, 28, 21, 33, 11, 349, DateTimeKind.Local).AddTicks(2740),
                            UserId = "2"
                        });
                });

            modelBuilder.Entity("App.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Cookbook"
                        });
                });

            modelBuilder.Entity("App.Models.ProfileAvatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfileAvatars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://robohash.org/1"
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://robohash.org/2"
                        },
                        new
                        {
                            Id = 3,
                            Url = "https://robohash.org/3"
                        },
                        new
                        {
                            Id = 4,
                            Url = "https://robohash.org/4"
                        },
                        new
                        {
                            Id = 5,
                            Url = "https://robohash.org/5"
                        },
                        new
                        {
                            Id = 6,
                            Url = "https://robohash.org/6"
                        },
                        new
                        {
                            Id = 7,
                            Url = "https://robohash.org/7"
                        },
                        new
                        {
                            Id = 8,
                            Url = "https://robohash.org/8"
                        },
                        new
                        {
                            Id = 9,
                            Url = "https://robohash.org/9"
                        },
                        new
                        {
                            Id = 10,
                            Url = "https://robohash.org/10"
                        },
                        new
                        {
                            Id = 11,
                            Url = "https://robohash.org/11"
                        },
                        new
                        {
                            Id = 12,
                            Url = "https://robohash.org/12"
                        },
                        new
                        {
                            Id = 13,
                            Url = "https://robohash.org/13"
                        },
                        new
                        {
                            Id = 14,
                            Url = "https://robohash.org/14"
                        },
                        new
                        {
                            Id = 15,
                            Url = "https://robohash.org/15"
                        },
                        new
                        {
                            Id = 16,
                            Url = "https://robohash.org/16"
                        },
                        new
                        {
                            Id = 17,
                            Url = "https://robohash.org/17"
                        },
                        new
                        {
                            Id = 18,
                            Url = "https://robohash.org/18"
                        },
                        new
                        {
                            Id = 19,
                            Url = "https://robohash.org/19"
                        },
                        new
                        {
                            Id = 20,
                            Url = "https://robohash.org/20"
                        },
                        new
                        {
                            Id = 21,
                            Url = "https://robohash.org/21"
                        },
                        new
                        {
                            Id = 22,
                            Url = "https://robohash.org/22"
                        },
                        new
                        {
                            Id = 23,
                            Url = "https://robohash.org/23"
                        },
                        new
                        {
                            Id = 24,
                            Url = "https://robohash.org/24"
                        },
                        new
                        {
                            Id = 25,
                            Url = "https://robohash.org/25"
                        },
                        new
                        {
                            Id = 26,
                            Url = "https://robohash.org/26"
                        },
                        new
                        {
                            Id = 27,
                            Url = "https://robohash.org/27"
                        },
                        new
                        {
                            Id = 28,
                            Url = "https://robohash.org/28"
                        },
                        new
                        {
                            Id = 29,
                            Url = "https://robohash.org/29"
                        },
                        new
                        {
                            Id = 30,
                            Url = "https://robohash.org/30"
                        },
                        new
                        {
                            Id = 31,
                            Url = "https://robohash.org/31"
                        },
                        new
                        {
                            Id = 32,
                            Url = "https://robohash.org/32"
                        },
                        new
                        {
                            Id = 33,
                            Url = "https://robohash.org/33"
                        },
                        new
                        {
                            Id = 34,
                            Url = "https://robohash.org/34"
                        },
                        new
                        {
                            Id = 35,
                            Url = "https://robohash.org/35"
                        });
                });

            modelBuilder.Entity("App.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("DateReviewed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            DateReviewed = "2023-10-12",
                            Description = "Et consequatur sint. Quis voluptas vitae rerum id. Libero nihil distinctio voluptatum soluta consequatur esse saepe. Et aliquam aut dolor porro.",
                            Rating = 4,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 5,
                            DateReviewed = "2024-07-23",
                            Description = "Mollitia hic et. Illum eum ex temporibus autem ea beatae est et. Distinctio harum quam. Aliquam maiores voluptate. Qui corrupti unde at. Sit qui sunt sed sit possimus asperiores animi fuga.",
                            Rating = 4,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 7,
                            DateReviewed = "2024-01-28",
                            Description = "Quos enim vel perspiciatis earum cupiditate. Eos harum eveniet dolor. Ab aut eos dolor itaque voluptate ipsum necessitatibus.",
                            Rating = 1,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 12,
                            DateReviewed = "2024-01-07",
                            Description = "Dicta eligendi aspernatur nemo aut quis ut est sapiente. Ut cumque ut consectetur optio quidem non. Est ut odit culpa. Aut quos assumenda fugiat consequuntur.",
                            Rating = 3,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 2,
                            DateReviewed = "2023-09-27",
                            Description = "Aut est beatae assumenda corrupti ut consequatur. Fugit minima officiis qui labore aut non voluptatum iure rem. Et velit nostrum aperiam beatae et repellendus possimus consequatur. Veniam tenetur dolorum qui. Iste minus ipsum sint nobis harum qui nemo quae.",
                            Rating = 3,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            DateReviewed = "2024-06-15",
                            Description = "Necessitatibus quos sit sunt aspernatur qui et non. Tenetur fugit aut veniam est soluta. Architecto quis quis. Placeat provident provident aspernatur dolor ut voluptatem dicta soluta nobis. Rerum beatae laboriosam.",
                            Rating = 3,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 7,
                            BookId = 20,
                            DateReviewed = "2023-10-15",
                            Description = "Quaerat laborum ut consectetur fuga hic. Velit atque modi exercitationem enim eius ut. Vel reprehenderit ipsa recusandae excepturi quasi sint. In provident vero ut eveniet quisquam. Tempore consequatur neque reiciendis et est quasi. Facilis rerum sunt autem vel sit ut porro.",
                            Rating = 5,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 8,
                            BookId = 20,
                            DateReviewed = "2024-04-12",
                            Description = "Maxime consequuntur quisquam quibusdam iste accusamus aliquid animi itaque. Suscipit sed dolor. Voluptas magni voluptatibus ratione.",
                            Rating = 3,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 9,
                            BookId = 7,
                            DateReviewed = "2024-01-17",
                            Description = "Maiores voluptatem dolorum nesciunt ducimus reiciendis ipsa. Id incidunt reiciendis. Aspernatur tempora officia sed facilis corrupti. Autem qui eius voluptatem officia accusantium nemo magnam earum ut. Ad aperiam in modi omnis officia est ut est vel.",
                            Rating = 3,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 10,
                            BookId = 11,
                            DateReviewed = "2023-12-14",
                            Description = "Nobis officia earum ipsum distinctio quia. Enim incidunt non harum corporis atque rerum voluptates. Repellat necessitatibus ipsam explicabo natus assumenda expedita. Soluta beatae aut ut doloremque dolore nulla. Quis ex iste ullam sit officia est.",
                            Rating = 3,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 11,
                            BookId = 15,
                            DateReviewed = "2024-05-22",
                            Description = "Expedita assumenda iure et. Quam commodi et dolorem repudiandae. Eos consequatur consequatur ex mollitia omnis incidunt deserunt. Et ipsum quo quasi.",
                            Rating = 1,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 12,
                            BookId = 7,
                            DateReviewed = "2023-12-04",
                            Description = "Tenetur voluptas tenetur omnis officiis omnis nobis eligendi adipisci. Consequuntur nostrum repellat ut quia deserunt earum soluta. A eum sit dolor eius a. Voluptatem debitis eum. Qui sit nobis velit consequuntur. Quasi rerum repudiandae omnis velit in sit impedit excepturi saepe.",
                            Rating = 5,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 13,
                            BookId = 16,
                            DateReviewed = "2023-12-23",
                            Description = "Sint voluptatem dolor. Cumque officia non ut porro. Inventore iste sint amet officia quo est aspernatur minima. Nobis laboriosam omnis numquam. Enim at magni dolorum. Vitae deserunt et temporibus eligendi et nemo enim.",
                            Rating = 5,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 14,
                            BookId = 11,
                            DateReviewed = "2023-10-01",
                            Description = "Non ea animi enim beatae. In vel eius blanditiis autem eum maxime impedit. Vel est id inventore accusantium et quaerat reprehenderit.",
                            Rating = 4,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 15,
                            BookId = 15,
                            DateReviewed = "2023-12-12",
                            Description = "Nihil sit enim ipsa. Minus unde minima corporis ut quo. Voluptatum dignissimos consequatur ut inventore suscipit cupiditate nobis. At id repudiandae occaecati qui ut quia laboriosam et tenetur. Facere itaque fuga quas.",
                            Rating = 2,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 16,
                            BookId = 10,
                            DateReviewed = "2023-12-06",
                            Description = "Nostrum vero alias consectetur quas placeat doloremque qui id incidunt. Dicta animi atque consequuntur facere non sequi. Voluptatem animi reprehenderit laudantium. Necessitatibus eos repellendus autem sit culpa non et consectetur dolorem. Delectus nemo eos beatae cum.",
                            Rating = 1,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 17,
                            BookId = 11,
                            DateReviewed = "2024-01-12",
                            Description = "Dolores tenetur iure cumque sequi voluptatibus maxime omnis quidem repellendus. Distinctio dolorum et amet est optio aut quia. Rerum unde deserunt. Sapiente id quod explicabo aut. Reprehenderit vel quis. Quia sed neque iusto cum id est sit deleniti aliquam.",
                            Rating = 3,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 18,
                            BookId = 19,
                            DateReviewed = "2023-12-30",
                            Description = "Magni molestiae cum cum laudantium voluptas sed. Possimus id qui dolorum soluta non eaque. Repellendus blanditiis quis fugit et molestiae autem ab. Aut voluptate hic mollitia distinctio qui aut voluptates eligendi itaque.",
                            Rating = 5,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 19,
                            BookId = 11,
                            DateReviewed = "2023-11-19",
                            Description = "Et inventore et. Animi velit similique natus quae doloremque officiis sed laboriosam sed. Provident fugiat impedit reiciendis nostrum. Rerum cumque sunt quia expedita id commodi. Perferendis porro consequuntur autem veniam est harum sunt.",
                            Rating = 5,
                            UserId = "4"
                        },
                        new
                        {
                            Id = 20,
                            BookId = 13,
                            DateReviewed = "2023-08-03",
                            Description = "Sed rerum iusto corporis similique nam temporibus aliquam deleniti. Aut aut tempore quo. Consequuntur iure perferendis qui aut dolore in. Quidem repudiandae nisi magni. Maiores ut quidem aut natus ut commodi sit.",
                            Rating = 2,
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("App.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("First")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfileAvatarId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileAvatarId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e23ace36-bac2-4eb9-8b34-0d6cfa1d0133",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tomas37@hotmail.com",
                            EmailConfirmed = false,
                            First = "Tomas",
                            Last = "Roob",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfileAvatarId = 35,
                            SecurityStamp = "f606942e-0bad-4175-b631-f325d3a043a8",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Tomas.Roob32"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cefb4cd1-15cf-4113-84b1-107d15af650d",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "John12@hotmail.com",
                            EmailConfirmed = false,
                            First = "John",
                            Last = "Dach",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfileAvatarId = 22,
                            SecurityStamp = "605c1a90-2cb9-4419-bb7a-ab2e51bdb9bc",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "John_Dach"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9f671b9-1ea5-4870-9991-2b7167249d05",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Velma5@hotmail.com",
                            EmailConfirmed = false,
                            First = "Velma",
                            Last = "Schultz",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfileAvatarId = 20,
                            SecurityStamp = "9fa1e91f-66ec-458f-bf32-02d6b7283045",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Velma59"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08687605-42a0-46ec-b514-2e1ad1a45d05",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Marcos_Pagac91@hotmail.com",
                            EmailConfirmed = false,
                            First = "Marcos",
                            Last = "Pagac",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfileAvatarId = 26,
                            SecurityStamp = "90b22a40-af4d-4a1e-ae9e-bb7613f9bb8c",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Marcos.Pagac"
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0278ee30-7539-4134-891f-92c6f2a5c59d",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Josh_Heaney85@gmail.com",
                            EmailConfirmed = false,
                            First = "Josh",
                            Last = "Heaney",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfileAvatarId = 28,
                            SecurityStamp = "ec655c1c-3139-41a0-a60a-4000b32c029f",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Josh98"
                        });
                });

            modelBuilder.Entity("App.Models.UserFavoritesBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFavoritesbooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            UserId = "1"
                        },
                        new
                        {
                            Id = 6,
                            BookId = 4,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 7,
                            BookId = 5,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 8,
                            BookId = 6,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 9,
                            BookId = 7,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 10,
                            BookId = 8,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 11,
                            BookId = 9,
                            UserId = "2"
                        },
                        new
                        {
                            Id = 12,
                            BookId = 1,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 13,
                            BookId = 2,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 14,
                            BookId = 3,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 15,
                            BookId = 4,
                            UserId = "3"
                        },
                        new
                        {
                            Id = 16,
                            BookId = 5,
                            UserId = "3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("App.Models.Book", b =>
                {
                    b.HasOne("App.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("App.Models.BookTransaction", b =>
                {
                    b.HasOne("App.Models.Book", "Book")
                        .WithMany("Transactions")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.User", "CheckedInBy")
                        .WithMany()
                        .HasForeignKey("CheckedInById");

                    b.HasOne("App.Models.User", "CheckedOutBy")
                        .WithMany()
                        .HasForeignKey("CheckedOutById");

                    b.HasOne("App.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("CheckedInBy");

                    b.Navigation("CheckedOutBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Models.Review", b =>
                {
                    b.HasOne("App.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Models.User", b =>
                {
                    b.HasOne("App.Models.ProfileAvatar", "ProfileAvatar")
                        .WithMany("Users")
                        .HasForeignKey("ProfileAvatarId");

                    b.Navigation("ProfileAvatar");
                });

            modelBuilder.Entity("App.Models.UserFavoritesBook", b =>
                {
                    b.HasOne("App.Models.Book", "Book")
                        .WithMany("Favorites")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("App.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("App.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("App.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Models.Book", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("App.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("App.Models.ProfileAvatar", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("App.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
