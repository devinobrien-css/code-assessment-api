// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using code_assessment_api.Data;

#nullable disable

namespace code_assessment_api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240719004341_UpdateCheckOutDate")]
    partial class UpdateCheckOutDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("code_assessment_api.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewArrival")
                        .HasColumnType("bit");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Van Rau",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Excepturi labore possimus et eius necessitatibus iusto dignissimos. Nobis assumenda saepe. Labore nihil numquam eos accusamus doloribus dolores rerum perferendis ullam. Illo perferendis ipsa necessitatibus consectetur. Distinctio molestiae eum eius adipisci minus id vel temporibus eum. Earum illum accusantium quas dolorum et.",
                            GenreId = 3,
                            ISBN = "e588ac9e-92b0-6f6e-7dbd-01f33cf19b48",
                            Image = "https://drive.google.com/thumbnail?id=1zycl7EiCECK541ialA9UCrs9HdfddUQb&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 118,
                            Publisher = "Dibbert and Sons",
                            Title = "Molestiae voluptatem excepturi.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 2,
                            Author = "Drake McCullough",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cum vero deserunt. Cum a tempore nemo ut repellat in sit ex sunt. Aut maxime eveniet laudantium quaerat. Qui non id quod. Alias excepturi placeat saepe voluptatem nisi. Animi laudantium aperiam sed nihil consectetur est.",
                            GenreId = 5,
                            ISBN = "a6420219-430b-da1a-d211-460d59142954",
                            Image = "https://drive.google.com/thumbnail?id=1C4sRKzQrFUDNQ1X12WVeKbX0knOoC6tA&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 391,
                            Publisher = "Miller - Stoltenberg",
                            Title = "Quia a earum.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Author = "Alessandra Koepp",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Atque eos autem voluptate ut sint eos eveniet. Qui possimus in quos iusto est voluptatem. Eum voluptas aut molestias dolorem dolor labore.",
                            GenreId = 2,
                            ISBN = "9dd689a1-f444-144e-004f-fefb00bd2c54",
                            Image = "https://drive.google.com/thumbnail?id=12xFmb08WRoRr5omVtZ38Obo1imbutVlh&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 224,
                            Publisher = "Boehm, Muller and Lesch",
                            Title = "Cupiditate et id.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jamil Dickens",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Et nemo iure et hic qui molestiae accusamus. Voluptatem illum itaque sunt qui ut. Eum tempora sed ut vero. Consequatur dolores ut non placeat necessitatibus occaecati quidem quia totam. Necessitatibus est et eos cum ipsam est. Et cupiditate eius adipisci assumenda perspiciatis ea commodi et assumenda.",
                            GenreId = 1,
                            ISBN = "4558d9fe-b493-4535-490a-20c6174744dc",
                            Image = "https://drive.google.com/thumbnail?id=1bOcpnwGFqsWJVLKxwXC4pdQgo5M1wzDi&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 477,
                            Publisher = "Rogahn LLC",
                            Title = "Cumque minus accusantium.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 5,
                            Author = "Misty Lubowitz",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Qui mollitia fugiat officia vel accusantium magnam aliquid. Et ut veniam enim natus. Quas provident a consectetur ut. Quibusdam molestiae ipsum eum adipisci quo. Ea rerum maxime aliquid non laudantium deserunt quae officiis. Vitae eos omnis natus soluta.",
                            GenreId = 4,
                            ISBN = "f03a755a-5d58-8b83-3845-a130016b8364",
                            Image = "https://drive.google.com/thumbnail?id=1Eu7yiiaAMfb0ktMOKhJZN6htKhF-TPDc&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 233,
                            Publisher = "Barton LLC",
                            Title = "Rem facilis neque.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 6,
                            Author = "Harvey Kozey",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Assumenda recusandae voluptatem eveniet. Inventore blanditiis sint blanditiis. Vel impedit quidem amet accusantium doloremque quia voluptas. Libero voluptates eligendi voluptatem libero esse earum voluptatibus aliquam nobis.",
                            GenreId = 1,
                            ISBN = "393922cd-5244-6d2c-2b35-9c9e58e41827",
                            Image = "https://drive.google.com/thumbnail?id=1Hk2fvOg7hpmRwKWc-QTl82NGerqKib71&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 453,
                            Publisher = "Hauck, Breitenberg and Durgan",
                            Title = "Et dolorum itaque.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 7,
                            Author = "Vivian Schmeler",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quam tempora dolor voluptas et possimus neque omnis. Similique neque reprehenderit. Officiis id quia in sed. Id commodi omnis. Iste magnam id.",
                            GenreId = 5,
                            ISBN = "226a9ac0-de1d-23d9-e1b6-861dee32ed9c",
                            Image = "https://drive.google.com/thumbnail?id=1cozBSsETbbn8YWA27-cyfpxAgOKX-FwJ&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 412,
                            Publisher = "Rohan, Hirthe and Mraz",
                            Title = "Laboriosam ullam atque.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 8,
                            Author = "Ethelyn Kautzer",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quo aut molestiae accusantium eos ipsum. Expedita accusantium iusto consequatur quos consequuntur. Cum quia consequatur nostrum ad iusto est accusamus. Et quia quia sed. Aliquid minima provident voluptatum neque consequatur repellendus aut quibusdam aut. Modi natus dolorem.",
                            GenreId = 2,
                            ISBN = "cf12fd11-e81e-208d-6617-f05ed5e35206",
                            Image = "https://drive.google.com/thumbnail?id=1X_DcLIDCuXHtlh2LDJrS07h8lNcK1vXl&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 362,
                            Publisher = "King - Larson",
                            Title = "Corrupti quis eius.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 9,
                            Author = "Leanne Bins",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Modi vel id ullam. Dolores ipsum earum dignissimos expedita. Itaque quia corrupti rem vel aut earum ut.",
                            GenreId = 3,
                            ISBN = "3d1b661e-697c-f29d-0405-e076b9e1dd56",
                            Image = "https://drive.google.com/thumbnail?id=1UMX2PhE5C46EQuRL8UkbdUqIKGuBNbJ5&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 109,
                            Publisher = "Kessler LLC",
                            Title = "Et nihil id.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 10,
                            Author = "Ransom Rodriguez",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Accusantium aperiam ut velit repudiandae neque magni et omnis deserunt. Et dolor omnis porro sunt. Qui deserunt est delectus odio officiis et. Aut et sit cupiditate. Incidunt aut ut cumque dolore quo. Laboriosam debitis harum suscipit necessitatibus sunt dignissimos deserunt.",
                            GenreId = 1,
                            ISBN = "2d1e5b5b-2343-1661-c6b3-9fca5df9a09c",
                            Image = "https://drive.google.com/thumbnail?id=1kSEao7g56ZMPYkBxqCQi70rpfxSqGvMK&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 329,
                            Publisher = "McClure - Franecki",
                            Title = "Necessitatibus numquam alias.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 11,
                            Author = "Agustin Lockman",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sit nobis culpa ut nihil temporibus fugit dolor aut ut. Voluptates et ducimus qui quia omnis. Eos perspiciatis modi. Aspernatur ut ut in quia quod est natus. Quas iure odio. Quis quam quod placeat quis velit.",
                            GenreId = 5,
                            ISBN = "1f8fa9b1-4b28-7296-8378-51ddbc4fa850",
                            Image = "https://drive.google.com/thumbnail?id=1dwug9Rd51uRSIR61N0de32UGuZ1Ns3WH&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 268,
                            Publisher = "Borer and Sons",
                            Title = "Qui et ut.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 12,
                            Author = "Jolie Parker",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ipsam eos expedita nobis. Qui dolor et. Nihil iste soluta et. Ut incidunt cumque aliquam inventore porro earum est.",
                            GenreId = 4,
                            ISBN = "3428499d-6124-efb4-4c6e-6070a7a4ede9",
                            Image = "https://drive.google.com/thumbnail?id=1UCje5bgDDxlWMWdYSK8tRgwMp-LkYM27&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 371,
                            Publisher = "Dooley - Tremblay",
                            Title = "Vero possimus architecto.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 13,
                            Author = "Guiseppe Lesch",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Recusandae minima consequuntur nostrum. Dolores dolores ratione quo libero hic. Aut in nobis quisquam eius omnis neque quas laudantium.",
                            GenreId = 3,
                            ISBN = "7da2801a-1583-4036-14ff-8ac22548fc02",
                            Image = "https://drive.google.com/thumbnail?id=17pwzIwvq6pyTJyqQ9ooT7dRXMwIHVNeU&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 328,
                            Publisher = "Kohler and Sons",
                            Title = "Aut ea quia.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 14,
                            Author = "Forrest Brown",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Odio et et quas praesentium hic voluptatem. Veniam numquam eligendi totam occaecati. Magni asperiores ipsa assumenda. Fugiat sunt velit delectus. Similique ad fuga quis reiciendis nihil ut recusandae fuga facilis. Quasi possimus voluptatum assumenda minus aperiam maiores fuga.",
                            GenreId = 5,
                            ISBN = "dbf2e3f8-5038-988d-51da-722dc3cbe3f9",
                            Image = "https://drive.google.com/thumbnail?id=1VGdbU9YQSgzTyesLYdt6xgANcWlOzVlX&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 365,
                            Publisher = "Lubowitz - MacGyver",
                            Title = "Rerum rerum magni.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 15,
                            Author = "Jade Stokes",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cupiditate ut consectetur exercitationem earum similique qui in sit. Ut aut in exercitationem et. Consequatur sint ut laudantium quidem quam. Et dolore eos vero qui repudiandae dolorem nemo incidunt. Qui ab earum est dolor. Ut voluptatem non consequatur.",
                            GenreId = 2,
                            ISBN = "9dc6e4db-ebcd-a559-c966-fc1483651dfb",
                            Image = "https://drive.google.com/thumbnail?id=1-wmBdCw9y0cuT_jaYQVd8zUtQ5Y6WydG&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 207,
                            Publisher = "Purdy - Durgan",
                            Title = "Hic tenetur reiciendis.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 16,
                            Author = "Justice Bradtke",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Earum eaque non explicabo facere aperiam distinctio adipisci eligendi. Dolorem cum eveniet exercitationem sunt. Odit et error neque molestiae. Corporis quasi doloribus assumenda ipsa dignissimos et laborum fugiat est.",
                            GenreId = 5,
                            ISBN = "e54e844a-0bae-efba-9444-24bc392988e5",
                            Image = "https://drive.google.com/thumbnail?id=17LCGXsaF8chECGxR5IXHkj5qc7UrWIqw&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 336,
                            Publisher = "Thiel Inc",
                            Title = "Distinctio atque dolorum.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 17,
                            Author = "Aida Jast",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Id iure consequuntur aut aut earum impedit ut. Omnis nesciunt consequatur fuga soluta eligendi qui iure placeat porro. Quod veritatis id iste neque nesciunt consequatur quasi.",
                            GenreId = 4,
                            ISBN = "be7c963c-addb-ad2d-60a9-d868ea5ccfcd",
                            Image = "https://drive.google.com/thumbnail?id=1V5-GfhMxAUE5QhKYGDtE1XlAjl3sRZFN&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 238,
                            Publisher = "Quigley - Hills",
                            Title = "Ipsum aliquam et.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 18,
                            Author = "Maurine Prosacco",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nesciunt quia et aut ad quam numquam aspernatur alias. Et aperiam enim architecto reprehenderit porro dolor quos. Quaerat aut sit modi maxime et. Ut pariatur rerum necessitatibus sunt iste. Illum eligendi debitis quaerat quia nam possimus.",
                            GenreId = 3,
                            ISBN = "18f212de-f434-bd45-dba0-f451a08cb8c1",
                            Image = "https://drive.google.com/thumbnail?id=129hAaWbWcEXubYXVEy2-a4Gbs0ulv9La&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 169,
                            Publisher = "Larkin, Upton and Lowe",
                            Title = "Ipsam sequi minima.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2024
                        },
                        new
                        {
                            Id = 19,
                            Author = "Elenora Abernathy",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quia quae occaecati beatae adipisci itaque. Quis sapiente eius illum. Blanditiis recusandae magni voluptatem nihil qui nihil ut. Sit et omnis impedit omnis sequi in architecto. Aut sit velit hic voluptas mollitia nobis sed.",
                            GenreId = 4,
                            ISBN = "85f7780b-90cf-2798-2744-21844354df8c",
                            Image = "https://drive.google.com/thumbnail?id=1iS1vCXQNst3Cm0hkq0m9m53HlFXB2e_b&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 258,
                            Publisher = "Watsica - Dibbert",
                            Title = "Sit nemo fuga.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = 20,
                            Author = "Elody Gibson",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cumque quia repudiandae necessitatibus. Eius reprehenderit facere. Dignissimos facere nisi nostrum et. Dolores consequatur ducimus sint. Et ipsa non. Vitae eum enim amet nihil ipsam maxime ut.",
                            GenreId = 5,
                            ISBN = "44301a53-807f-7b73-b8b9-dd64626fbaa1",
                            Image = "https://drive.google.com/thumbnail?id=1EsQ7X9KyU57dg3N3AjHn_xtUtauiElDF&sz=w1000",
                            IsBestSeller = false,
                            IsDeleted = false,
                            IsFeatured = false,
                            IsNewArrival = false,
                            Pages = 203,
                            Publisher = "Dibbert - Satterfield",
                            Title = "Facilis veritatis dolorem.",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        });
                });

            modelBuilder.Entity("code_assessment_api.Models.BookTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckedInById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CheckedOutById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DueTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CheckedInById");

                    b.HasIndex("CheckedOutById");

                    b.HasIndex("UserId");

                    b.ToTable("BookTransaction");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 10,
                            CheckOutTime = new DateTime(2024, 7, 18, 21, 6, 35, 422, DateTimeKind.Local).AddTicks(2720),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 11, 16, 7, 17, 50, 961, DateTimeKind.Local).AddTicks(7508),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 18,
                            CheckOutTime = new DateTime(2024, 7, 18, 1, 31, 47, 724, DateTimeKind.Local).AddTicks(1157),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2024, 9, 11, 12, 41, 48, 123, DateTimeKind.Local).AddTicks(8151),
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 4,
                            CheckOutTime = new DateTime(2024, 7, 14, 8, 8, 32, 681, DateTimeKind.Local).AddTicks(6335),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2025, 5, 16, 9, 19, 6, 626, DateTimeKind.Local).AddTicks(9886),
                            UserId = "3"
                        },
                        new
                        {
                            Id = 4,
                            BookId = 7,
                            CheckOutTime = new DateTime(2024, 7, 15, 10, 2, 15, 577, DateTimeKind.Local).AddTicks(9118),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2025, 3, 23, 12, 48, 33, 324, DateTimeKind.Local).AddTicks(9725),
                            UserId = "3"
                        },
                        new
                        {
                            Id = 5,
                            BookId = 1,
                            CheckOutTime = new DateTime(2024, 7, 18, 10, 26, 33, 856, DateTimeKind.Local).AddTicks(4448),
                            CheckedOutById = "5",
                            DueTime = new DateTime(2025, 6, 13, 22, 44, 29, 601, DateTimeKind.Local).AddTicks(2035),
                            UserId = "3"
                        });
                });

            modelBuilder.Entity("code_assessment_api.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Self-Help"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Cookbook"
                        });
                });

            modelBuilder.Entity("code_assessment_api.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("First")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a610d18-e909-4db1-a4a9-01f9756490a1",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Tammy72@hotmail.com",
                            EmailConfirmed = false,
                            First = "Tammy",
                            Last = "Hartmann",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/409.jpg",
                            SecurityStamp = "77a0028f-7b28-4694-b7fb-0f18b63a1046",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Tammy.Hartmann"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7cca45b7-4ea6-4aeb-a7c1-fc98aafa11d7",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Denise88@yahoo.com",
                            EmailConfirmed = false,
                            First = "Denise",
                            Last = "Beatty",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/891.jpg",
                            SecurityStamp = "aaf88966-6fcd-4acf-acec-f896bae9652b",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Denise_Beatty"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0bc7fbe0-7419-4f10-a2e9-0818025dc2d0",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Josh5@yahoo.com",
                            EmailConfirmed = false,
                            First = "Josh",
                            Last = "Bednar",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/193.jpg",
                            SecurityStamp = "883f96d2-38ba-438a-8034-21755ee5ebd9",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Josh_Bednar"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb6e2b3d-caf0-4644-a6ee-ff6c2ccb421d",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Edgar.Beahan56@gmail.com",
                            EmailConfirmed = false,
                            First = "Edgar",
                            Last = "Beahan",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1094.jpg",
                            SecurityStamp = "95ee50e9-8e16-4742-9a48-184b6898f7c2",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Edgar91"
                        },
                        new
                        {
                            Id = "5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3f15d02c-dde7-4644-869e-e2f11d9ef6eb",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wade70@yahoo.com",
                            EmailConfirmed = false,
                            First = "Wade",
                            Last = "Weber",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            ProfilePicture = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/116.jpg",
                            SecurityStamp = "15991c76-95f6-4247-8754-09d7959ba19a",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "Wade.Weber19"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("code_assessment_api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("code_assessment_api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("code_assessment_api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("code_assessment_api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("code_assessment_api.Models.Book", b =>
                {
                    b.HasOne("code_assessment_api.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("code_assessment_api.Models.BookTransaction", b =>
                {
                    b.HasOne("code_assessment_api.Models.Book", "Book")
                        .WithMany("Transactions")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("code_assessment_api.Models.User", "CheckedInBy")
                        .WithMany()
                        .HasForeignKey("CheckedInById");

                    b.HasOne("code_assessment_api.Models.User", "CheckedOutBy")
                        .WithMany()
                        .HasForeignKey("CheckedOutById");

                    b.HasOne("code_assessment_api.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("CheckedInBy");

                    b.Navigation("CheckedOutBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("code_assessment_api.Models.Book", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("code_assessment_api.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("code_assessment_api.Models.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
